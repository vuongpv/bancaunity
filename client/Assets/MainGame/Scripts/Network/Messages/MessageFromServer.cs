//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using UnityEngine;
using SocketIOClient;
using System.Collections;
using System.Collections.Generic;

public class M_S_HasError:M_S_Base
{
		public int error_code;
		public override void Process ()
		{
//		ResultCode code = (ResultCode)error_code;
//		Debug.LogError("Co error server gui ve ne:" + code);
//		string mess = string.Format(AvLocalizationManager.GetString(137),"");
		
		
//		AvSceneManager.Instance.LoadToLoginScene();
		
		}
}

public class M_S_JoinedRoom:M_S_Base
{
		public int type;
		public string id;
		public string name;
//	public List<OtherPlayerNetworkData> users;
	
		public override void Process ()
		{	
				Debug.Log ("M_S_JoinedRoom " + name);
		
				FHNetworkManager.curRoomId = id;
				FHNetworkManager.curRoomName = name;

				//string room = + name;
//		FHNetworkManager.JoinChatRoom(name);
		
		}
}

public class M_S_OtherJoinedRoom:M_S_Base
{
	
		public override void Process ()
		{
//		Debug.Log("new user: " + user.nickname + "-" + user.clientid);
//		FHPlayer p = new AvPlayer(user);
//
//		//check xem da load scene hay chua da
//		if(FHPlayersManager.Instance.PlayerMe != null && FHPlayersManager.Instance.PlayerMe.OwnerObject != null)
//			FHPlayersManager.Instance.CreatePlayerObject(p);
//		
//		FHPlayersManager.Instance.AddPlayer(p);
//		
		}
}

public class M_S_OtherLeaveRoom:M_S_Base
{
		public string user;
		public override void Process ()
		{
		
		}
}

public class M_S_LeaveRoom:M_S_Base
{
	
		public override void Process ()
		{
//		FHNetworkManager.curRoomId = "";
//		FHNetworkManager.curRoomType = RoomType.None;
		
				//FHNetworkManager.Instance.ClearOthersPlayer();
				//SceneManager.Instance.LoadScene(SceneName.Login);
		}
}

public class M_S_SubscribeResult : M_S_Base
{
		public string roomName;
		public int roomType;
		public bool result;

		public override void Process ()
		{
				Debug.Log ("SubscribeResult: " + roomName + " --- " + roomType + " --- " + result);
				FHNetworkManager.Client ().OnJoinPlayResult (roomName, roomType, result);
		}
}

public class M_S_RoomReady : M_S_Base
{
		public int roomType;
		public int routeID;
		public string RoomName;
		public string player_Names;
		public string player_SIDs;
		public string player_locations;// vi tri tuong ung 1-4
		public int timePlay = 100;//default
		public float timeUpdate = 0.1f;
		public int kindPlay = 0;
		public float taxPercent = 1.0f;

		public override void Process ()
		{
				Debug.Log ("roomready: " + RoomName + ", locations: " + player_locations);
		
				bool result = FHNetworkManager.Client ().fhRoomOnlinePlay.Init (RoomName, roomType, routeID, timePlay, timeUpdate, kindPlay, player_Names, player_SIDs, player_locations, taxPercent);
				if (!result) {
//			FHOnlineManager.instance.GetFHClient().SetNetworkException();
						Debug.LogError ("FH FH SSSSSSSSSSS" + player_Names);
				}
		
				SceneManager.instance.LoadSceneWithLoading (FHScenes.Online);
				Debug.LogError ("FH FH OnRoomReady OKIE");
		}
}

public class M_S_SyncReady : M_S_Base
{
		public long timeServer = 0;
		public string SID = "";
		public int CountReady = 0;
	
		public override void Process ()
		{
				Debug.Log ("syncReady: " + SID + ", " + CountReady + ", " + timeServer);
				FHNetworkManager.TimeBeginSync = timeServer; 
				FHNetworkManager.SID = SID;
				FHNetworkManager.Client ().OnSycnUserReady (CountReady);
		}
}

public class M_S_ClientLogic : M_S_Base
{
		public long timeServer = 0;
		public string SID = "";
		public string listEvents = "";
	
		public override void Process ()
		{
				Debug.Log ("ClientLogic: " + timeServer + " --- " + SID + " --- " + listEvents);
//		if(FHPlayersManager.instance.PlayerMe.ClientId != SID){
				FHNetworkManager.SID = SID;
				FHNetworkManager.Client ().OnCaptureClientLogic (listEvents, timeServer);
//		}
		}
}